spring:
  kafka:
    bootstrap-servers: pkc-w8nyg.me-central1.gcp.confluent.cloud:9092
    properties:
      security:
        protocol: SASL_SSL
      sasl:
        jaas:
          config: org.apache.kafka.common.security.plain.PlainLoginModule required username='7FF3ODUFU2Z6NU6E' password='raygq5hGR3Y2a6iV6V7CrKdiLbJOHZtzcNJqUbzbjq63rmuPq6XkhddZffRVIxAW';
        mechanism: PLAIN
        streams:
          replication-factor: 3
    streams:
      application-id: kafka-spring-starter

  cloud:
    stream:
      function:
        bindings:
          processWords-in-0: facts
          processWords-out-0: counts
      bindings:
        # kafka producer
        produceChuckNorris-out-0:
          binder: kafka
          destination: facts
          producer:
            partition-count: 4
            useNativeEncoding: true
        # kafka consumer
        consumeChuckNorris-in-0:
          binder: kafka
          destination: facts
          group: KotlinFactsOutputter
      kafka:
        binder:
          consumer-properties:
            key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value.deserializer: org.apache.kafka.common.serialization.StringDeserializer
          producer-properties:
            key.serializer: org.apache.kafka.common.serialization.StringSerializer
            value.serializer: org.apache.kafka.common.serialization.StringSerializer
        streams:
          binder:
            application-id: kafka-spring-starter
            configuration:
              default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
              default.value.serde: org.apache.kafka.common.serialization.Serdes$BytesSerde
              commit.interval.ms: 1000
    function:
      definition: produceChuckNorris;consumeChuckNorris;processWords